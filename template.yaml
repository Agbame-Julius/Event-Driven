AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Java 21 Event-Driven App with S3 and SNS

Parameters:
  Env:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

Globals:
  Function:
    Timeout: 10

Resources:

  NotificationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "my-s3-uploads-${Env}"

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "my-sns-topic-${Env}"
      Subscription:
        - Protocol: email
          Endpoint: julius.agbame@amalitech.com

  S3NotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: helloworld.App::handleRequest
      Runtime: java21
      MemorySize: 512
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref SNSTopic
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt SNSTopic.TopicName
      Events:
        S3Upload:
          Type: S3
          Properties:
            Bucket: !Ref NotificationBucket
            Events: s3:ObjectCreated:Put

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt S3NotificationFunction.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt NotificationBucket.Arn


Outputs:
  BucketName:
    Description: "S3 bucket name"
    Value: !Ref NotificationBucket
